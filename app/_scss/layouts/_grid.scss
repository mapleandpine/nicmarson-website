.grid {
  display: flex;
  flex-direction: column;
  list-style: none;
  margin: 0;
  padding: 0;

  @include breakpoint("medium") {
    flex-direction: row;

    /* stupid IE10 tweener syntax */
    -ms-flex-preferred-size: auto;
  }
}

.grid-cell {
  flex: 1;
}

.grid--flexCells {
  & > .grid-cell {
    display: flex;
  }
}

.grid--top {
  align-items: flex-start;
}

.grid--bottom {
  align-items: flex-end;
}

.grid--center {
  align-items: center;
}

.grid-cell--top {
  align-self: flex-start;
}

.grid-cell--bottom {
  align-self: flex-end;
}

.grid-cell--center {
  align-self: center;
}

.grid-order--1 {
  order: -1;
}

@mixin grid-sizing($name: "") {
  $sep: "-";
  @if $name == "" {
    $sep: "";
  }
  .#{$name}#{$sep}grid--fit > .grid-cell {
    flex: 1;
  }
  .#{$name}#{$sep}grid--full > .grid-cell {
    flex: 0 0 100%;
  }
  .#{$name}#{$sep}grid--1of2 > .grid-cell {
    flex: 0 0 50%
  }
  .#{$name}#{$sep}grid--1of3 > .grid-cell {
    flex: 0 0 33.3333%
  }
  .#{$name}#{$sep}grid--1of4 > .grid-cell {
    flex: 0 0 25%
  }
}

// create the default grid-sizing modifiers
@include grid-sizing();

// create grid-sizing modifiers for each breakpoint
@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 2);
  @include breakpoint($name) {
    @include grid-sizing($name);
  }
}

@mixin grid-gutters($name: "") {
  $sep: "-";
  @if $name == "" {
    $sep: "";
  }
  .#{$name}#{$sep}grid--gutters {
    & > .grid-cell {
      margin-left: 1em;

      &:first-child {
        margin-left: 0;
      }
    }
  }
  .#{$name}#{$sep}grid--guttersLarge {
    & > .grid-cell {
      margin-left: 1.5em;

      &:first-child {
        margin-left: 0;
      }
    }
  }
  .#{$name}#{$sep}grid--gutters2x {
    & > .grid-cell {
      margin-left: 2em;

      &:first-child {
        margin-left: 0;
      }
    }
  }
  .#{$name}#{$sep}grid--gutters3x {
    & > .grid-cell {
      margin-left: 3em;

      &:first-child {
        margin-left: 0;
      }
    }
  }
}

// create the default grid-gutters modifiers
@include grid-gutters();

// create grid-gutters modifiers for each breakpoint
@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 2);
  @include breakpoint($name) {
    @include grid-gutters($name);
  }
}

// Firefox doesn't yet support multiline Flexboxes so we
// have to fake it. Remove this once this bug is resolved
// https://bugzilla.mozilla.org/show_bug.cgi?id=702508
@supports not (flex-wrap: wrap) {
  .grid--ffMultilineSupport {
    display: block;
    & > .grid-cell {
      display: inline-block;
      vertical-align: top;
    }
  }
  @mixin grid-sizing($name: "") {
    $sep: "-";
    @if $name == "" {
      $sep: "";
    }
    .#{$name}#{$sep}grid--full {
      display: block;
      & > .grid-cell {
        display: block;
      }
    }
    .#{$name}#{$sep}grid--fit,
    .#{$name}#{$sep}grid--1of2,
    .#{$name}#{$sep}grid--1of3,
    .#{$name}#{$sep}grid--1of4 {
      display: flex;
    }
  }
  @include grid-sizing();
  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 2);
    @include breakpoint($name) {
      @include grid-sizing($name);
    }
  }
}

@mixin sizes($name: "") {
  $sep: "-";
  @if $name == "" {
    $sep: "";
  }
  .u-#{$name}#{$sep}full {
    width: 100% !important;
    flex: none !important;
  }
  .u-#{$name}#{$sep}1of2 {
    width: 50% !important;
    flex: none !important;
  }
  .u-#{$name}#{$sep}1of3 {
    width: 33.3333% !important;
    flex: none !important;
  }
  .u-#{$name}#{$sep}2of3 {
    width: 66.6667% !important;
    flex: none !important;
  }
  .u-#{$name}#{$sep}1of4 {
    width: 25% !important;
    flex: none !important;
  }
  .u-#{$name}#{$sep}3of4 {
    width: 75% !important;
    flex: none !important;
  }
};

// create global sizes
@include breakpoint("medium") {
  @include sizes();
}

// create sizes for each breakpoint
@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 2);
  @include breakpoint($name) {
    @include sizes($name);
  }
}

.grid-wrap {
  flex-flow: row wrap;
  margin-left: 0;

  .grid-cell {
    flex: none;
    margin-left: 0;
  }
}

.no-flexbox .grid-wrap {
  display: block;
}

.aligner {
  display: flex;
  align-items: center;
  justify-content: center;

  // height is needed for IE10-11 for this bug
  // http://bit.ly/16b1Xhx
  height: 24em;
  // other browsers use min-height
  @supports not (-ms-flex: 1) {
    height: auto;
    min-height: 24em;
  }
}

.aligner-item--top {
  align-self: flex-start;
}

.aligner-item--bottom {
  align-self: flex-end;
}
