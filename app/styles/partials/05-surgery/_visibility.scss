// Showing and hiding content
//
// Force an element to be shown or hidden (<strong>including for screen readers</strong>) with the use of <code>.show</code> and <code>.hidden</code> classes. These classes use <code>!important</code> to avoid specificity conflicts, just like the <a href="#helper-classes-floats">quick floats</a>. They are only available for block level toggling. They can also be used as mixins.</p> <p><code>.hide</code> is available, but it does not always affect screen readers and is <strong>deprecated</strong> as of v3.0.1. Use <code>.hidden</code> or <code>.sr-only</code> instead.</p> <p>Furthermore, <code>.invisible</code> can be used to toggle only the visibility of an element, meaning its <code>display</code> is not modified and the element can still affect the flow of the document.

.invisible {
  visibility: hidden;
}

.sr-only {
  position: absolute;
  width:1px;
  height:1px;
  padding:0;
  margin:-1px;
  overflow:hidden;
  clip:rect(0,0,0,0);
  border:0;
}


// Hide from screenreaders and browsers
//
// Credit: HTML5 Boilerplate

.hidden {
  display: none !important;
  visibility: hidden !important;
}


// responsive visibility
.phone {
  display: block;

  @include mq($from: double) {
    display: none;
  }
}

.tablet {
  display: none;

  @include mq($from: double) {
    display: block;
  }

  @include mq($from: triple) {
    display: none;
  }
}

.laptop {
  display: none;

  @include mq($from: triple) {
    display: block;
  }

  @include mq($from: quadruple) {
    display: none;
  }
}

.monitor {
  display: none;

  @include mq($from: quadruple) {
    display: block;
  }
}
